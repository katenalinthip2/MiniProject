{"version":3,"sources":["serviceWorker.js","firebase/config.js","Login.js","Nav.js","Count.js","Collect.js","firebase/uploader.js","App.js","Home.js","Routes.js","index.js"],"names":["Boolean","window","location","hostname","match","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","storage","auth","Login","props","useState","email","password","datauser","setDataUser","message","setMessage","className","style","width","type","name","onChange","e","target","value","placeholder","onClick","event","preventDefault","console","log","signInWithEmailAndPassword","then","response","history","push","catch","error","createUserWithEmailAndPassword","Nav","to","Count","collect","id","url","count","firestore","collection","doc","set","Collect","editCollect","deleteCollect","src","alt","Uploader","image","setImage","setUrl","progress","setProgress","setError","file","files","fileType","includes","ref","put","on","snapshot","Math","round","bytesTransferred","totalBytes","child","getDownloadURL","localStorage","setItem","height","max","color","App","collects","setCollects","setName","useEffect","retriveData","onSnapshot","docs","myCollect","map","d","data","delete","getItem","length","display","listStyle","index","key","Home","Routes","path","exact","component","apps","config","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8f855868.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import 'firebase/storage';\r\nimport 'firebase/auth'\r\nimport firebase from 'firebase/app'\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDcBpE1SygJcrXDmngTXW2BT8vCtPUTB0s\",\r\n  authDomain: \"loginminipro.firebaseapp.com\",\r\n  databaseURL: \"https://loginminipro.firebaseio.com\",\r\n  projectId: \"loginminipro\",\r\n  storageBucket: \"loginminipro.appspot.com\",\r\n  messagingSenderId: \"951579270707\",\r\n  appId: \"1:951579270707:web:3dea7e69aeb1e2129d8d46\",\r\n  measurementId: \"G-62CS4P3CG4\"\r\n};\r\nfirebase.initializeApp(firebaseConfig);\r\nconst storage = firebase.storage();\r\nconst auth = firebase.auth();\r\nexport {firebase, storage, auth as default}","import React, { useState } from 'react';\r\nimport './App.css';\r\n// import { Link } from 'react-router-dom';\r\nimport {firebase} from \"./firebase/config\";\r\nimport './App.css';\r\nconst Login = (props) => {\r\n  const [datauser, setDataUser] = useState({\r\n    email: \"\",\r\n    password: \"\"\r\n  })\r\n  const [message, setMessage] = useState('')\r\n  // useEffect = () => {\r\n  //   auth.onAuthStateChanged(user => {\r\n  //     if (user) {\r\n  //       this.props.history.push('/')\r\n  //     }\r\n  //   });\r\n  // }\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    console.log(\"test\");\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(datauser.email, datauser.password)\r\n      .then(response => {\r\n        props.history.push(\"/Collects\");\r\n      })\r\n      .catch(error => {\r\n        setMessage(error.message)\r\n      })\r\n  }\r\n  const onSignUp = (event) => {\r\n    event.preventDefault();\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(datauser.email, datauser.password)\r\n      .then(response => {\r\n      })\r\n      .catch(error => {\r\n        setMessage(error.message)\r\n      })\r\n  }\r\n  return (\r\n    <form className='App-header2' >\r\n      <p className='Log'> SIGN IN or SIGN UP </p>\r\n      <div className='from-group'>\r\n        <label className='App-Log'> Email </label>\r\n        <input style={{width: 400}} type='email' className='form-control' name=\"email\"\r\n          onChange={(e) => setDataUser({ ...datauser, email: e.target.value })} placeholder=\"Email\" />\r\n        <label className='App-Log'> Password </label>\r\n        <input style={{width: 400}} type='password' className='form-control' name=\"password\"\r\n          onChange={(e) => setDataUser({ ...datauser, password: e.target.value })} placeholder=\"Password\" />\r\n        <p> {message}</p>\r\n        <div className='container'> \r\n        <button className='Sn'  onClick={onSubmit}>Sign In</button>\r\n        <button className='Su'  onClick={onSignUp}>Sign Up</button>\r\n        </div>\r\n      </div>\r\n    </form >\r\n  );\r\n}\r\nexport default Login;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './App.css';\r\n\r\nconst Nav = () => {\r\n    return (\r\n\r\n        <div >\r\n            <div className=\"navbar navbar-expand-lg navbar-light bg-light\" >\r\n                <Link className='nav-link' to='/'> Home </Link>\r\n                <Link className='nav-link' to='/Collects'> MyCollect </Link>\r\n                <Link className='nav-link' to='/'> Logout </Link>\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nav;","import React, {useState } from 'react';\r\nimport './Count.css';\r\nimport { firestore } from './index'\r\nconst Count = (props) => {\r\n  const {collect} = props\r\n  const {id, name, url, count} = collect\r\n  // const [count, setCount] = useState(0)\r\n    const add = () => {\r\n      firestore.collection(\"collects\").doc(id + '')\r\n        .set({\r\n          id: id,\r\n          name: name,\r\n          url: url,\r\n          count: (count + 1)\r\n        })\r\n    }\r\n    const minus = () => {\r\n      firestore.collection(\"collects\").doc(id + '')\r\n        .set({\r\n          id: id,\r\n          name: name,\r\n          url: url,\r\n          count: (count -1)\r\n        })\r\n    }\r\n   return (\r\n       <div> \r\n    <h6 className='num'> Number of pieces : {count} </h6>\r\n     <div className='count'>  \r\n        <button className='add ' onClick={add}> + </button>\r\n        <button className='add 'onClick={minus}> - </button>\r\n     </div></div>\r\n   );\r\n}\r\nexport default Count;","import React from 'react';\r\nimport './Collect.css'\r\nimport Count from './Count'\r\nconst Collect = (props) => {\r\n    const {collect, editCollect, deleteCollect} = props\r\n    const {id, name, url} = collect\r\n    // console.log(\"im\", url);\r\n    return (\r\n        <li >\r\n            <div className=\"id\"> {id} </div> \r\n            <img className='img' src={url} alt=\"image\"></img>\r\n            <div className=\"name\"> {name} </div>\r\n            <div className=\"container\">\r\n            <button className='red' onClick={() => deleteCollect(id)}> Delete </button>\r\n            <button className='green' onClick={() => editCollect(id)}> Edit </button>\r\n            </div>\r\n            <Count collect={collect} />\r\n          </li>\r\n    )\r\n}\r\nexport default Collect;","import React, { useState } from 'react';\r\nimport { firebase } from './config'\r\nconst Uploader = () => {\r\n    const [image, setImage] = useState(null)\r\n    const [url, setUrl] = useState('')\r\n    const [progress, setProgress] = useState(0)\r\n    const [error, setError] = useState('')\r\n    const handChange = e => {\r\n        const file = e.target.files[0];\r\n        if (file) {\r\n            const fileType = file['type']\r\n            const validImageTypes = [\"image/gif\", \"image/jpeg\", \"image/png\",\"image/jpg\"];\r\n            if (validImageTypes.includes(fileType)) {\r\n                setError('Please click Button \"Upload\" before click Button \"AddCollection\"')\r\n                setImage(file)\r\n            }\r\n            else {\r\n                console.log(\"error\");\r\n                setError('Please select an image to upload')\r\n            }\r\n        }\r\n    }\r\n    const handleUpload = () => {\r\n        if (image != null) {\r\n            const uploadTask = firebase.storage().ref(`images/${image.name}`).put(image)\r\n            uploadTask.on(\r\n                'state_changed',\r\n                (snapshot) => {\r\n                    const progress = Math.round(\r\n                        (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n                    )\r\n                    setProgress(progress)\r\n                },\r\n                error => {\r\n                    console.log(error);\r\n                    setError(error);\r\n                }, () => {\r\n                    firebase.storage().ref('images').child(image.name).getDownloadURL().then( url => {\r\n                        console.log(url);\r\n                        setUrl(url);\r\n                        localStorage.setItem('url',url)\r\n                        setProgress(0)\r\n                    })\r\n                }\r\n            )\r\n        } else {\r\n            setError('err')\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <input className='file' type='file' onChange={handChange} /> {''}\r\n            <button className='upload'  onClick={handleUpload}> Upload</button>\r\n            <div style={{ height: '10px'}} >\r\n                {progress > 0 ? <progress value={progress} max=\"100\" /> : \"\"}\r\n                <p style={{ color: 'red', }}> {error} </p>\r\n            </div> </div>\r\n    )\r\n}\r\nexport default Uploader;","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Nav from './Nav';\nimport { firestore } from './index'\nimport Collect from './Collect';\nimport Uploader from './firebase/uploader'\n\n// import Count from './Count'\nconst App = () => {\n  const [collects, setCollects] = useState([\n  ])\n  const [name, setName] = useState('')\n  // const [count, setCont] = useEffect(0)\n  useEffect(() => {\n    retriveData()\n  }, [])\n  const retriveData = () => {\n    firestore.collection(\"collects\").onSnapshot((snapshot) => {\n      console.log(snapshot.docs)\n      let myCollect = snapshot.docs.map(d => {\n        const { id, name, url, count } = d.data()\n        console.log(id, name,url, count)\n        return { id, name, url, count }\n      })\n      setCollects(myCollect)\n    })\n  }\n\n  const renderCollect = () => {\n    if (collects && collects.length)\n      return collects.map((collect, index) => {\n        console.log(\"im in app\", collect.url);\n        return (\n         \n            <Collect key={index} collect={collect}\n              deleteCollect={deleteCollect}\n              editCollect={editCollect}\n            />\n\n           \n        )\n      })\n    else\n      return (<div className='No'> No Collection </div>)\n  }\n  const addCollect = () => {\n    let id = (collects.length === 0) ? 1 : collects[collects.length - 1].id + 1\n    let url = localStorage.getItem(\"url\")\n    firestore.collection(\"collects\").doc(id + '')\n      .set({\n        id: id,\n        name: name,\n        url: url,\n        count:0\n      })\n  }\n  const deleteCollect = (id) => {\n    firestore.collection(\"collects\").doc(id + '').delete()\n  }\n  const editCollect = (id) => {\n    let url = localStorage.getItem(\"url\")\n    firestore.collection(\"collects\").doc(id + '').set({ id, name,url })\n  }\n  return (\n    <div style={{width: \"100\",height:\"100%\"}}>\n      <Nav />\n      <div className='App-header' >\n        <h1 className='H1' > My Collections </h1>\n        <input className='Input-App' type=\"text\" name=\"name\" onChange={(e) => setName(e.target.value)} />\n        <Uploader />\n        <button className='Button' onClick={addCollect}> AddCollect </button>\n        <ul style={{ display: 'flex', listStyle: 'none' }}>{renderCollect()}</ul>\n      </div>\n    </div>\n  );\n}\nexport default App;","import React from 'react';\r\nimport './App.css'\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div className='home'>\r\n            <p> Welcome to My Collections</p>\r\n            \r\n            <Link className='home-button' to='/Login'> Get Start </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport Login from \"./Login\";\r\nimport App from \"./App\";\r\nimport Home from './Home'\r\n\r\nconst Routes = () => {\r\n    return (\r\n        <BrowserRouter>\r\n            <Switch>\r\n                <Route path=\"/Collects\" exact component ={App} />\r\n                <Route path=\"/Login\" exact component ={Login} />\r\n                <Route path=\"/\" exact component ={Home} />\r\n                \r\n                \r\n            </Switch>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default Routes;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport Routes from './Routes';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport firebase from 'firebase/app';\nimport 'firebase/firestore'\nimport config from './firebase/config'\n\nif (firebase.apps.length === 0)\n   firebase.initializeApp(config);\nexport const firestore = firebase.firestore()\n\nReactDOM.render(\n  <React.StrictMode>\n    <Routes />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}